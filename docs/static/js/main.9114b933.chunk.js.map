{"version":3,"sources":["components/addcategorie.js","components/helpers/getGift.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetcGifs.js","components/gifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setImputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAqCeA,EAjCM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEJC,mBAAS,cAFL,mBAEjCC,EAFiC,KAErBC,EAFqB,KAmBxC,OACI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAeZM,GAfY,4CAAH,sDCIPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKhB,IACpB,4BAAIU,QCgCDO,EApCQ,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KA6BtC,OAtBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFC,YAAW,WACPC,QAAQC,IAAIH,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,GACV,aAMhB,CAACpB,IAMGqB,EDvB2BQ,CAAa7B,GAAjCa,EAHuB,EAG7BN,KAAca,EAHe,EAGfA,QAWtB,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,0CAEZ,qBAAKJ,UAAU,WAAf,SAKQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEItBmB,EAjCM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,aAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAWvB,OAAO,qCACH,8CAEA,cAAC,EAAD,CAAcA,cAAeA,IAE7B,uBACA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CACGA,SAAUA,GACLA,Y,MCrBzBgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9114b933.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\nconst AddCategorie = ({ setCategories }) => {\r\n\r\n    const [inputValue, setImputValue] = useState('hola mundo')\r\n\r\n    const handleInputChange = (e) => {\r\n        setImputValue(e.target.value);\r\n    };\r\n\r\n\r\n\r\n    const handeSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setImputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handeSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            ></input>\r\n        </form>\r\n\r\n\r\n    )\r\n\r\n};\r\n\r\nexport default AddCategorie;\r\n\r\n\r\n\r\n","export const getGift = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=cnI2ih8LB5b5gtm4g2ZLNXeS0O3j4YsZ`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};\r\n\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={url} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetcGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n    /* \r\n \r\n     useEffect(() => {\r\n \r\n         getGift(category).then(imgs => setimages(imgs))\r\n \r\n     }, [category]);\r\n\r\n    getGift()\r\n*/\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <h2>Cargando</h2>}\r\n\r\n            <div className=\"cardGrid\">\r\n\r\n\r\n\r\n                {\r\n                    images.map(img =>\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img} />)\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGift } from \"../components/helpers/getGift\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getGift(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    console.log(imgs)\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    }, 3000)\r\n                })\r\n\r\n\r\n            })\r\n\r\n    }, [category]);\r\n\r\n\r\n\r\n\r\n\r\n    return state;\r\n\r\n};","import React, { useState } from \"react\";\r\nimport AddCategorie from \"./addcategorie\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Colombia']);\r\n    /*\r\n        const handleAdd = () => {\r\n            setCategories([...categories,]);\r\n    \r\n        };\r\n    */\r\n\r\n\r\n    return <>\r\n        <h2>GifExpertApp</h2>\r\n\r\n        <AddCategorie setCategories={setCategories} />\r\n\r\n        <hr />\r\n        <ol>\r\n            {\r\n                categories.map(category =>\r\n                (<GifGrid\r\n                    category={category}\r\n                    key={category}\r\n\r\n                />)\r\n                )\r\n            }\r\n        </ol>\r\n\r\n    </>\r\n};\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/gifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}